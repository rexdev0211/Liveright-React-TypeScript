#name: CI dev
#on:
#  push:
#    branches: [ dev ]
#jobs:
#   deploy:
#    name: "Deploy to dev"
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy code to liveright-frontend-dev server
#        uses: appleboy/ssh-action@master
#        with:
#         host: ${{ secrets.SSH_HOST_DEV }}
#         username: ${{ secrets.SSH_USERNAME }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         port: 22
#         script: |
#          cd /home/liverightdev/public_html
#          git checkout dev
#          git pull origin dev
#          yarn install
#          yarn build
#
###name: depoy
#
## Controls when the workflow will run
###on:
#  # Triggers the workflow on push or pull request events but only for the main branch
###  push:
###    branches: [ dev ]
#  #pull_request:
#    #branches: [ dev ]
#
#  # Allows you to run this workflow manually from the Actions tab
###  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
###jobs:
###  deploy_dev:
###    runs-on: self-hosted
###    env:
###      CI: false
###      REACT_APP_BASE_URL: https://liveright-dev.madebycolorelephant.com
###      REACT_APP_BASE_API_URL: https://api.liveright-dev.madebycolorelephant.com
#
#
###    steps:
#
###      - uses: actions/checkout@v2
#
###      - name: Run yarn install
###        run: yarn install
###      - name: Copy .env.dev to .env
###        run: cp .env.dev .env
###      - name: Run yarn build
###        run: NODE_ENV=development yarn build
#
#      # Runs a set of commands using the runners shell
###      - name: Deploy to dev
###        run: |
###          echo depoy to dev env
###          cp -r build/* /var/www/dev/front
#
###  deploy_stage:
###    needs: deploy_dev
###    runs-on: self-hosted
###    env:
###      CI: false
###      REACT_APP_BASE_URL: https://liveright-stage.madebycolorelephant.com
###      REACT_APP_BASE_API_URL: https://api.liveright-stage.madebycolorelephant.com
#
#
###    steps:
#
###      - uses: actions/checkout@v2
#
###      - name: Run yarn install
###        run: yarn install
###      - name: Copy .env.stage to .env
###        run: cp .env.stage .env
###      - name: Run yarn build
###        run: NODE_ENV=stage yarn build
#
#      # Runs a set of commands using the runners shell
###      - name: Deploy to stage
###        run: |
###          echo depoy to dev env
###          cp -r build/* /var/www/stage/front
